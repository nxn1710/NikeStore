package com.bootshop.site.entities;
// Generated Mar 5, 2021 10:34:32 AM by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product")
public class Product implements java.io.Serializable {
	private static final long serialVersionUID = 1L;

	private int id;
	private Brand brand;
	private Category category;
	private Color color;
	private Style style;
	private String name;
	private String slug;
	private String description;
	private float price;
	private List<Image> images = new ArrayList<Image>(0);
	private List<ProductsSizes> productsSizeses = new ArrayList<ProductsSizes>(0);

	public Product() {
	}

	public Product(int id, Brand brand, Category category, Color color, Style style, String name, String slug,
			String description, float price) {
		this.id = id;
		this.brand = brand;
		this.category = category;
		this.color = color;
		this.style = style;
		this.name = name;
		this.slug = slug;
		this.description = description;
		this.price = price;
	}

	public Product(int id, Brand brand, Category category, Color color, Style style, String name, String slug,
			String description, float price, List<Image> images, List<ProductsSizes> productsSizeses) {
		this.id = id;
		this.brand = brand;
		this.category = category;
		this.color = color;
		this.style = style;
		this.name = name;
		this.slug = slug;
		this.description = description;
		this.price = price;
		this.images = images;
		this.productsSizeses = productsSizeses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "brand_id", nullable = false)
	public Brand getBrand() {
		return this.brand;
	}

	public void setBrand(Brand brand) {
		this.brand = brand;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "color_id", nullable = false)
	public Color getColor() {
		return this.color;
	}

	public void setColor(Color color) {
		this.color = color;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "style_id", nullable = false)
	public Style getStyle() {
		return this.style;
	}

	public void setStyle(Style style) {
		this.style = style;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "slug", nullable = false)
	public String getSlug() {
		return this.slug;
	}

	public void setSlug(String slug) {
		this.slug = slug;
	}

	@Column(name = "description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "price", nullable = false, precision = 24, scale = 0)
	public float getPrice() {
		return this.price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<Image> getImages() {
		return this.images;
	}

	public void setImages(List<Image> images) {
		this.images = images;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<ProductsSizes> getProductsSizeses() {
		return this.productsSizeses;
	}

	public void setProductsSizeses(List<ProductsSizes> productsSizeses) {
		this.productsSizeses = productsSizeses;
	}
	@Transient
	public String getThumbnailUrl() {
		return images.get(0).getUrl();
	}

	@Override
	public String toString() {
		return "Product [id=" + id + ", brand=" + brand + ", category=" + category + ", color=" + color + ", style="
				+ style + ", name=" + name + ", slug=" + slug + ", description=" + description + ", price=" + price
				+ ", images=" + images + ", productsSizeses=" + productsSizeses + "]";
	}

	
}
